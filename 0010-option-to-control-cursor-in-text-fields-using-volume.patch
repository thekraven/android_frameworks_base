From ffcc7ce302169db3cc7964d26eab553521112eb5 Mon Sep 17 00:00:00 2001
From: Konsta <konsta09@gmail.com>
Date: Mon, 27 Aug 2012 12:06:05 +0300
Subject: [PATCH 1/2] option to control cursor in text fields using volume
 keys (1/2)

Change-Id: Ic6bd2e968b5e8d155cadf5873251c0fbf8b0c6b2
---
 .../inputmethodservice/InputMethodService.java     |   30 +++++++++++++++++++-
 core/java/android/provider/Settings.java           |    9 ++++++
 2 files changed, 38 insertions(+), 1 deletion(-)

diff --git a/core/java/android/inputmethodservice/InputMethodService.java b/core/java/android/inputmethodservice/InputMethodService.java
index 53cdf21..04fccfe 100644
--- a/core/java/android/inputmethodservice/InputMethodService.java
+++ b/core/java/android/inputmethodservice/InputMethodService.java
@@ -247,6 +247,8 @@ public class InputMethodService extends AbstractInputMethodService {
      */
     public static final int IME_VISIBLE = 0x2;
 
+    int mVolumeKeyCursorControl = 0;
+
     InputMethodManager mImm;
     
     int mTheme = 0;
@@ -1731,6 +1733,26 @@ public class InputMethodService extends AbstractInputMethodService {
             }
             return false;
         }
+        if (event.getKeyCode() == KeyEvent.KEYCODE_VOLUME_UP) {
+            mVolumeKeyCursorControl = Settings.System.getInt(getContentResolver(),
+                    Settings.System.VOLUME_KEY_CURSOR_CONTROL, 0);
+            if(isInputViewShown() && mVolumeKeyCursorControl != 0) {
+                sendDownUpKeyEvents(mVolumeKeyCursorControl == 2 ? KeyEvent.KEYCODE_DPAD_RIGHT
+                        : KeyEvent.KEYCODE_DPAD_LEFT);
+                return true;
+            }
+            return false;
+        }
+        if (event.getKeyCode() == KeyEvent.KEYCODE_VOLUME_DOWN) {
+            mVolumeKeyCursorControl = Settings.System.getInt(getContentResolver(),
+                    Settings.System.VOLUME_KEY_CURSOR_CONTROL, 0);
+            if(isInputViewShown() && mVolumeKeyCursorControl != 0) {
+                sendDownUpKeyEvents(mVolumeKeyCursorControl == 2 ? KeyEvent.KEYCODE_DPAD_LEFT
+                        : KeyEvent.KEYCODE_DPAD_RIGHT);
+                return true;
+            }
+            return false;
+        }
         return doMovementKey(keyCode, event, MOVEMENT_DOWN);
     }
 
@@ -1776,7 +1798,13 @@ public class InputMethodService extends AbstractInputMethodService {
                 && !event.isCanceled()) {
             return handleBack(true);
         }
-        
+        if (event.getKeyCode() == KeyEvent.KEYCODE_VOLUME_UP || keyCode == KeyEvent.KEYCODE_VOLUME_DOWN) {
+            mVolumeKeyCursorControl = Settings.System.getInt(getContentResolver(),
+                    Settings.System.VOLUME_KEY_CURSOR_CONTROL, 0);
+            if(isInputViewShown() && mVolumeKeyCursorControl != 0) {
+                return true;
+            }
+        }
         return doMovementKey(keyCode, event, MOVEMENT_UP);
     }
 
diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index 8dcc141..e53cf3a 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -2695,6 +2695,15 @@ public final class Settings {
         public static final String STATUSBAR_TRANSPARENCY = "statusbar_transparency";
 
         /**
+         * Volume keys control cursor in text fields (default is 0)
+         * 0 - Disabled
+         * 1 - Volume up/down moves cursor to left/right
+         * 2 - Volume up/down moves cursor to right/left
+         * @hide
+         */
+        public static final String VOLUME_KEY_CURSOR_CONTROL = "volume_key_cursor_control";
+
+        /**
          * Settings to backup. This is here so that it's in the same place as the settings
          * keys and easy to update.
          *
-- 
1.7.9.5

